[{"/Users/jiyu/Desktop/지유/ws/portfolio/src/index.js":"1","/Users/jiyu/Desktop/지유/ws/portfolio/src/App.js":"2","/Users/jiyu/Desktop/지유/ws/portfolio/src/serviceWorker.js":"3","/Users/jiyu/Desktop/지유/ws/portfolio/src/components/Hindex.js":"4","/Users/jiyu/Desktop/지유/ws/portfolio/src/components/Nav.js":"5","/Users/jiyu/Desktop/지유/ws/portfolio/src/components/Work.js":"6"},{"size":517,"mtime":1608305332422,"results":"7","hashOfConfig":"8"},{"size":7442,"mtime":1608305332404,"results":"9","hashOfConfig":"8"},{"size":4951,"mtime":1608305332422,"results":"10","hashOfConfig":"8"},{"size":2939,"mtime":1608305332412,"results":"11","hashOfConfig":"8"},{"size":462,"mtime":1608305332412,"results":"12","hashOfConfig":"8"},{"size":4915,"mtime":1608308112144,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"uionbq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/Users/jiyu/Desktop/지유/ws/portfolio/src/index.js",[],["31","32","33"],"/Users/jiyu/Desktop/지유/ws/portfolio/src/App.js",["34","35","36","37","38","39"],"import React, { Component } from \"react\";\n// import classNames from 'classnames';\nimport { ISlideConfig, PageSlides, SlideParallaxType } from \"react-page-slides\";\nimport Hindex from './components/Hindex';\nimport Work from './components/Work';\nimport Nav from './components/Nav';\nimport Modal from 'react-modal';\nimport PortfolioData from './data/portfolio.json';\n\nimport \"./css/default.scss\";\nimport \"./css/style.scss\";\n\n// test commit\nconst customStyles = {\n  content : {\n    top : '4vh',\n    left : '10vw',\n    right : 'auto',\n    bottom : 'auto',\n    transform: 'translate(2vw, 2vh)',\n    width:'80vw',\n    height:'92vh',\n    backgroundColor:'#fff',\n    overflowY: 'scroll'\n  }\n};\n\nvar aText = new Array(\n  \"be a designer\"\n  //,  \n  );\n  var iSpeed = 100; // time delay of print out\n  \n  var iArrLength = aText[0].length; // the length of the text array\n  var iScrollAt = 20; // start scrolling up at this many lines\n   \n  var iTextPos = 0; // initialise text position\n  var sContents = ''; // initialise contents variable\n  var iRow; // initialise current row\n\nclass Aboutme extends Component {\n\n  state = {\n    typedtext:''\n  }\n\n  clearText = () => {\n    this.setState({ typedtext: ''})\n  }\n    typewriter = () => {\n      \n      let iIndex = 0; // start printing array at this posision\n      sContents =  ' ';\n      iRow = Math.max(0, iIndex-iScrollAt);\n      \n      while ( iRow < iIndex ) {\n       sContents += aText[iRow++] + '<br />';\n      }\n      \n      const typedtext = sContents + aText[iIndex].substring(0, iTextPos) ;\n      // + \"_\"\n      this.setState({ typedtext });\n      if ( iTextPos++ == iArrLength ) {\n       iTextPos = 0;\n       iIndex++;\n       if ( iIndex != aText.length ) {\n        iArrLength = aText[iIndex].length;\n        setTimeout(() => this.typewriter(), 500);\n       }\n      } else {\n      //  setTimeout(\"typewriter()\", iSpeed);\n        setTimeout(() => this.typewriter(), iSpeed);\n      }\n    }\n\n\n  render() {\n    const{ typedtext } = this.state;\n    return (\n      <section className=\"aboutMe\">\n        <h2>\n          Who am <span>I</span>\n        </h2>\n        {/* <p>무엇을 해야 하는지는 본인이 잘 알고 있습니다. 해야 한다고 생각하는것을 하면 됩니다.<br/>\n언제나 배움의 자세를 멈추지 않고, 발전하는 디자이너가 되겠습니다. </p> */}\n        <p className=\"subTxt\">\n          I know what to do.\n          <br />You can do what you think you should do.\n          <br />I will always <span>{typedtext}</span> \n          <br />who does not stop learning and develops.\n        </p>\n        <ul className=\"about-content\">\n          <li><span>Adobe Photoshop</span></li>\n          <li>&lt;<span>HTML</span> /&gt;</li>\n          <li>&#123;<span>CSS</span>:<span>SASS</span>;&#125;</li>\n          <li><span>Java Script</span> &#40;React,Vue&#41;&#123;&#125;</li>\n          <li><span>Zeplin / Invision</span></li>\n        </ul>\n      </section>\n    );\n  }\n}\n\n\nclass App extends Component {\n  state = {\n    page: 0,\n    modalIsOpen: false,\n    modalData: null,\n    view: null,\n  }\n  modal = false;\n\n  componentDidMount(){\n    this._getList(); \n  }\n\n  _getList(){\n    this.setState({\n      contents : PortfolioData.contents\n    });\n  }\n \n  closeModal = () => {\n    this.setState({modalIsOpen: false});\n  }\n  \n  _updateModalData = (data) => {\n    this.setState({\n      modalData: data\n    })\n    this._modalOpen()\n  }\n\n  handleSlide = (index) => {\n    this.toggleActive('.rps-slide', index);\n    this.toggleActive('.nav li', index);\n    this.setState({\n      page: index\n    });\n\n    if (index === 1) {\n      this.child.clearText();\n      setTimeout(() => {\n        this.child.typewriter();\n      }, 700); \n    }                                                                    \n  }\n\n  toggleActive = (name, index) => {\n    const elements = document.querySelectorAll(name);\n    elements.forEach((el) => {\n      el.classList.remove('active');\n    });\n    elements[index].classList.add('active');\n\n   // const elements = document.querySelectorAll(name);\n    // elements.forEach((el, i) => {\n    //   if (index === i) {\n    //     el.classList.add('active');\n    //   } else {\n    //     el.classList.remove('active');\n    //   }\n    // });\n\n\n  }\n\n  componentDidMount() {\n    const { page } = this.state;\n    this.toggleActive('.rps-slide', page);\n    this.toggleActive('.nav li', page);\n  }\n\n\n  upDatePage = () => {\n    const currnetPage = this.props.page;\n   } \n \n   onClick = (order) =>{ \n    this.setState({\n      page: order\n    });\n   }\n\n  updateModal = newModal => {\n    this.modal = newModal;\n    console.log(this.modal);\n  }\n\n\n  openModal = name =>{\n    let view = null;\n    if (name === 'work') {\n      view = this.working();\n    }\n    //  else if (name === 'seriousStudy') {\n    //   view = this.seriousStudy();\n    // }\n    else if (name === 'contect') {\n      view = this.contect();\n    }\n\n    this.setState({ view, modalIsOpen: true });\n  }\n\n  working = () => {\n    const contents = PortfolioData.contents\n    return (\n      <div className=\"working\">\n        <h2 className=\"secTitle\">Work</h2>\n         <ul className=\"trigger\">  \n          {contents.map(item => {\n            return ( \n                <li key={\"w\"+item.id}><a href={\"#w\"+item.id}>{item.title}</a></li>\n            )\n          })}\n        </ul>   \n       <ul className=\"working-content\">\n        {contents.map(item => {\n          return (\n                <li key={\"w\"+item.id} className=\"clearfix\" id={\"w\"+item.id}>\n                  <div className=\"pfContent\">\n                    <div className=\"date\">{item.date}</div>\n                    <h3>{item.title}</h3>\n                    <div className=\"subTitle\">{item.sTitle}</div>\n                    <div className=\"description\">{item.description}</div>\n                    <div className=\"use-skills\">{item.skill.join(', ')}</div>\n                    {/* <a href={item.url}><i class=\"fa fa-link\"></i></a> */}\n                  </div>\n                  <div className=\"pfImg\"><img src={item.imgSrc} alt={item.title} className=\"shadow4\" /></div>\n                </li>\n                \n              )\n            })}\n          </ul>\n        </div>\n    )\n  }\n\n\n  render() {\n    const { view, modalIsOpen } = this.state;\n    const slides = [\n      {\n        content: <Hindex/>\n      },\n      {\n        content: <Aboutme ref={instance => { this.child = instance; }} />\n      },\n      {\n        content: <Work/>,\n        // <Work openModal={this.openModal}/>,\n        style: {\n          backgroundColor: \"#421161\",\n          color:\"#fff\"\n        }\n      }\n    ];\n    return (\n      <div id=\"root\" className=\"App\">\n        <Nav \n          page={this.state.page}\n          onClick={this.onClick}\n        />\n        <PageSlides\n          currentSlideIndex={this.state.page}\n          // currentSlideIndex={2}//작업후 삭제\n          onChange={this.handleSlide}\n          enableAutoScroll={!modalIsOpen}\n          transitionSpeed={1000}\n          slides={slides}\n          parallax={{\n            offset: 0.6,\n            type: SlideParallaxType.reveal\n          }}\n        />\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          className=\"modal shadow4\"\n        >\n          {view}\n        <a onClick={this.closeModal} className=\"btn-close\"><i className=\"fa fa-times\"></i></a>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/jiyu/Desktop/지유/ws/portfolio/src/serviceWorker.js",[],"/Users/jiyu/Desktop/지유/ws/portfolio/src/components/Hindex.js",[],"/Users/jiyu/Desktop/지유/ws/portfolio/src/components/Nav.js",["40","41","42","43","44","45"],"\nimport React, { Component } from \"react\";\n\n\nclass Nav extends Component{ \n    trigger = (order) => {\n      this.props.onClick(order);\n    }\n  \n    render(){\n      return(\n        <ul className=\"nav\">\n          <li onClick={() => this.trigger(0)}><a href=\"#\"></a></li>\n          <li onClick={() => this.trigger(1)}><a href=\"#\"></a></li>\n          <li onClick={() => this.trigger(2)}><a href=\"#\"></a></li>\n        </ul>\n      );\n    }\n  }\n  \n\n\nexport default Nav;",["46","47","48"],"/Users/jiyu/Desktop/지유/ws/portfolio/src/components/Work.js",["49","50"],"import React, { Component } from \"react\";\nimport Modal from 'react-modal';\nimport PortfolioData from '../data/portfolio.json';\n\n// const customStyles = {\n//   content : {\n//     top : '4vh',\n//     left : '10vw',\n//     right : 'auto',\n//     bottom : 'auto',\n//     transform: 'translate(2vw, 2vh)',\n//     width:'80vw',\n//     height:'92vh',\n//     backgroundColor:'#fff',\n//     overflowY: 'scroll'\n//   }\n// };\n \n\nModal.setAppElement(\"#root\")\n\n\nclass Work extends Component{\n\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      contents:[ ],\n      // modalIsOpen: false,\n      modalData: null,\n      view: null,\n    };\n \n    // this.openModal = this.openModal.bind(this);\n    // this.closeModal = this.closeModal.bind(this);\n  }\n\n  // componentDidMount(){\n  //   this._getList(); \n  //  }\n  // _getList(){\n  //   this.setState({\n  //     contents : PortfolioData.contents\n  //   });\n  //  }\n\n\n \n  // closeModal() {\n  //   this.setState({modalIsOpen: false});\n  //   this.props.updateModal(false);\n  // }\n  \n  // _updateModalData = (data) => {\n  //   this.setState({\n  //     modalData: data\n  //   })\n  //   this._modalOpen()\n  // }\n\n  // // \n  // openModal = name => event =>{\n  //   let view = null;\n  //   if (name === 'work') {\n  //     view = this.working();\n  //   }\n  //   //  else if (name === 'seriousStudy') {\n  //   //   view = this.seriousStudy();\n  //   // }\n  //   else if (name === 'contect') {\n  //     view = this.contect();\n  //   }\n\n  //   this.props.updateModal(true);\n  //   this.setState({ view, modalIsOpen: true });\n  // }\n\n  // working = () => {\n  //   const contents = PortfolioData.contents\n  //   return (\n  //     <div className=\"working\">\n  //       <h2 className=\"secTitle\">Work</h2>\n  //        <ul className=\"trigger\">  \n  //         {contents.map(item => {\n  //           return ( \n  //               <li key={\"w\"+item.id}><a href={\"#w\"+item.id}>{item.title}</a></li>\n  //           )\n  //         })}\n  //       </ul>   \n  //      <ul className=\"working-content\">\n  //       {contents.map(item => {\n  //         return (\n  //               <li key={\"w\"+item.id} className=\"clearfix\" id={\"w\"+item.id}>\n  //                 <div className=\"pfContent\">\n  //                   <div className=\"date\">{item.date}</div>\n  //                   <h3>{item.title}</h3>\n  //                   <div className=\"subTitle\">{item.sTitle}</div>\n  //                   <div className=\"description\">{item.description}</div>\n  //                   <div className=\"use-skills\">{item.skill.join(', ')}</div>\n  //                   {/* <a href={item.url}><i class=\"fa fa-link\"></i></a> */}\n  //                 </div>\n  //                 <div className=\"pfImg\"><img src={item.imgSrc} alt={item.title} className=\"shadow4\" /></div>\n  //               </li>\n                \n  //             )\n  //           })}\n  //         </ul>\n  //       </div>\n  //   )\n  // }\n\n  // seriousStudy = () => {\n  //   // const { b } = this.state;\n  //   return(\n  //   <h2 className=\"secTitle\">Serious study</h2>\n  //   )\n  // }\n\n  // contect = () => {\n  //   return(\n  //     <div>\n  //       <h2 className=\"secTitle\">Contect</h2>\n  //       <div className=\"myInfo\">\n  //       <dl>\n  //         <dt>Name</dt>\n  //         <dd>In hyo shim</dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Email</dt>\n  //         <dd><a href=\"mailto:hshehehe1128@gmail.com\">hshehehe1128@gmail.com</a></dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Addrass</dt>\n  //         <dd>Seoul</dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Career</dt>\n  //         <dd>6~7 year</dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Main / Sub</dt>\n  //         <dd>web design / web publisher</dd>\n  //       </dl>\n  //       </div>\n  //     </div>\n  //     )\n  // }\n  \n  \n    render(){\n      // const { contents, modalData, view } = this.state\n      // const filteredContents = contents\n      return(\n        <div className=\"work\">\n         <ul>\n           <li>\n           {/* <li onClick={() => this.props.openModal('work')} > */}\n             <a className=\"work-sec1\" href=\"http://aaahs.dothome.co.kr/\" target=\"_blank\">\n               <span>Work</span>\n             </a>\n           </li>\n           <li>\n             <a href=\"/img/resume.pdf\" download className=\"work-sec2\">\n               <span>Resume</span>\n             </a>\n           </li>\n           <li>\n             <a className=\"work-sec3\" href=\"mailto:hshehehe1128@gmail.com\">\n               <span>Contact</span>\n             </a>\n           </li>\n         </ul>\n\n         {/* <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          className=\"modal shadow4\"\n        >\n          {view}\n        <a onClick={this.closeModal} className=\"btn-close\"><i className=\"fa fa-times\"></i></a>\n        </Modal> */}\n\n        \n      </div>\n      )\n    }\n  }\n\n\n\nexport default Work;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":22},{"ruleId":"61","severity":1,"message":"62","line":63,"column":23,"nodeType":"63","messageId":"64","endLine":63,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":66,"column":20,"nodeType":"63","messageId":"64","endLine":66,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":169,"column":3,"nodeType":"68","messageId":"64","endLine":173,"endColumn":4},{"ruleId":"57","severity":1,"message":"69","line":177,"column":11,"nodeType":"59","messageId":"60","endLine":177,"endColumn":22},{"ruleId":"70","severity":1,"message":"71","line":285,"column":9,"nodeType":"72","endLine":285,"endColumn":60},{"ruleId":"73","severity":1,"message":"74","line":13,"column":47,"nodeType":"72","endLine":13,"endColumn":59},{"ruleId":"70","severity":1,"message":"75","line":13,"column":47,"nodeType":"72","endLine":13,"endColumn":59},{"ruleId":"73","severity":1,"message":"74","line":14,"column":47,"nodeType":"72","endLine":14,"endColumn":59},{"ruleId":"70","severity":1,"message":"75","line":14,"column":47,"nodeType":"72","endLine":14,"endColumn":59},{"ruleId":"73","severity":1,"message":"74","line":15,"column":47,"nodeType":"72","endLine":15,"endColumn":59},{"ruleId":"70","severity":1,"message":"75","line":15,"column":47,"nodeType":"72","endLine":15,"endColumn":59},{"ruleId":"51","replacedBy":"76"},{"ruleId":"53","replacedBy":"77"},{"ruleId":"55","replacedBy":"78"},{"ruleId":"57","severity":1,"message":"79","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":159,"column":74,"nodeType":"82","endLine":159,"endColumn":89},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'ISlideConfig' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","'currnetPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["83"],["84"],[],"'PortfolioData' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]