{"version":3,"sources":["components/Hindex.js","components/Work.js","App.js","components/Nav.js","serviceWorker.js","index.js"],"names":["Circle","react_default","a","createElement","className","Component","Hindex","id","data-name","xmlns","viewBox","d","transform","style","fill","Hindex_Circle","Modal","setAppElement","iRow","Work","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","contents","modalData","view","_this2","onClick","openModal","href","download","Nav","trigger","order","customStyles","content","top","left","right","bottom","width","height","backgroundColor","overflowY","aText","Array","iSpeed","iArrLength","length","iScrollAt","iTextPos","sContents","Aboutme","typedtext","clearText","setState","typewriter","iIndex","Math","max","substring","setTimeout","App","page","modalIsOpen","modal","closeModal","_updateModalData","data","_modalOpen","handleSlide","index","toggleActive","child","name","elements","document","querySelectorAll","forEach","el","classList","remove","add","upDatePage","updateModal","newModal","console","log","working","contect","PortfolioData","map","item","key","title","date","sTitle","description","skill","join","src","imgSrc","alt","_getList","_this3","_this$state","slides","components_Hindex","App_Aboutme","ref","instance","components_Work","color","components_Nav","dist","currentSlideIndex","onChange","enableAutoScroll","transitionSpeed","parallax","offset","type","SlideParallaxType","reveal","lib_default","isOpen","onRequestClose","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdd94106.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Circle extends Component {\n  render() {\n    return (\n      <div className=\"circle\">\n          <div className=\"circle1\" />\n          <div className=\"circle2\" />\n          <div className=\"circle3\" />\n          <div className=\"circle4\" />\n          <div className=\"circle5\" />\n        </div>\n    )\n  }\n}\n\n\n\nclass Hindex extends Component {\n  render() {\n    return (\n      <section className=\"main\">\n        <div className=\"logo\">WD.<span>hsIN</span></div>\n        <div className=\"slogan\">\n          <span className=\"sp1\">I</span>\n          <span className=\"sp2\"> a</span>\n          <span className=\"sp3\">m</span>\n          <br />\n          <span className=\"sp4\">W</span>\n          <span className=\"sp5\">e</span>\n          <span className=\"sp6\">b</span>\n          <span className=\"sp7\"> D</span>\n          <span className=\"sp8\">e</span>\n          <span className=\"sp9\">s</span>\n          <span className=\"sp10\">i</span>\n          <span className=\"sp11\">g</span>\n          <span className=\"sp12\">n</span>\n          <span className=\"sp13\">e</span>\n          <span className=\"sp14\">r</span>\n          <br />\n          <span className=\"sp15\">w</span>\n          <span className=\"sp16\">i</span>\n          <span className=\"sp17\">t</span>\n          <span className=\"sp18\">h</span>\n          \n          <span className=\"sp19\"> D</span>\n          <span className=\"sp20\">e</span>\n          <span className=\"sp21\">v</span>\n          <span className=\"sp22\">e</span>\n          <span className=\"sp23\">l</span>\n          <span className=\"sp24\">o</span>\n          <span className=\"sp25\">p</span>\n          <span className=\"sp26\">m</span>\n          <span className=\"sp27\">e</span>\n          <span className=\"sp28\">n</span>\n          <span className=\"sp29\">t</span>\n          <span className=\"sp30\"> S</span>\n          <span className=\"sp31\">k</span>\n          <span className=\"sp32\">i</span>\n          <span className=\"sp33\">l</span>\n          <span className=\"sp34\">l</span>\n          <div className=\"scollDown\">\n            <svg\n              id=\"scollDown\"\n              data-name=\"scollDown\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 41.31 27.86\"\n            >\n              <title>down</title>\n              <path\n                d=\"M0,1.89A1.87,1.87,0,0,1,.78.37,1.89,1.89,0,0,1,3.42.75L18,20.75a1.89,1.89,0,1,1-2.66,2.68A1.67,1.67,0,0,1,15,23L.37,3A1.88,1.88,0,0,1,0,1.89Z\"\n                transform=\"translate(0 0)\"\n                style={{ fill: \"#fff\" }}\n              />\n              <path\n                d=\"M18.76,26a1.88,1.88,0,0,1,.4-1.16L37.91.75a1.9,1.9,0,1,1,3,2.32h0L22.14,27.13A1.89,1.89,0,0,1,18.76,26Z\"\n                transform=\"translate(0 0)\"\n                style={{ fill: \"#fff\" }}\n              />\n            </svg>\n            Please scoll down\n          </div>\n        </div>\n        <Circle/>\n      </section>\n    );\n  }\n}\nexport default Hindex;","import React, { Component } from \"react\";\nimport Modal from 'react-modal';\nimport PortfolioData from '../data/portfolio.json';\n\n// const customStyles = {\n//   content : {\n//     top : '4vh',\n//     left : '10vw',\n//     right : 'auto',\n//     bottom : 'auto',\n//     transform: 'translate(2vw, 2vh)',\n//     width:'80vw',\n//     height:'92vh',\n//     backgroundColor:'#fff',\n//     overflowY: 'scroll'\n//   }\n// };\n \n\nModal.setAppElement(\"#root\")\n\n\nclass Work extends Component{\n\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      contents:[ ],\n      // modalIsOpen: false,\n      modalData: null,\n      view: null,\n    };\n \n    // this.openModal = this.openModal.bind(this);\n    // this.closeModal = this.closeModal.bind(this);\n  }\n\n  // componentDidMount(){\n  //   this._getList(); \n  //  }\n  // _getList(){\n  //   this.setState({\n  //     contents : PortfolioData.contents\n  //   });\n  //  }\n\n\n \n  // closeModal() {\n  //   this.setState({modalIsOpen: false});\n  //   this.props.updateModal(false);\n  // }\n  \n  // _updateModalData = (data) => {\n  //   this.setState({\n  //     modalData: data\n  //   })\n  //   this._modalOpen()\n  // }\n\n  // // \n  // openModal = name => event =>{\n  //   let view = null;\n  //   if (name === 'work') {\n  //     view = this.working();\n  //   }\n  //   //  else if (name === 'seriousStudy') {\n  //   //   view = this.seriousStudy();\n  //   // }\n  //   else if (name === 'contect') {\n  //     view = this.contect();\n  //   }\n\n  //   this.props.updateModal(true);\n  //   this.setState({ view, modalIsOpen: true });\n  // }\n\n  // working = () => {\n  //   const contents = PortfolioData.contents\n  //   return (\n  //     <div className=\"working\">\n  //       <h2 className=\"secTitle\">Work</h2>\n  //        <ul className=\"trigger\">  \n  //         {contents.map(item => {\n  //           return ( \n  //               <li key={\"w\"+item.id}><a href={\"#w\"+item.id}>{item.title}</a></li>\n  //           )\n  //         })}\n  //       </ul>   \n  //      <ul className=\"working-content\">\n  //       {contents.map(item => {\n  //         return (\n  //               <li key={\"w\"+item.id} className=\"clearfix\" id={\"w\"+item.id}>\n  //                 <div className=\"pfContent\">\n  //                   <div className=\"date\">{item.date}</div>\n  //                   <h3>{item.title}</h3>\n  //                   <div className=\"subTitle\">{item.sTitle}</div>\n  //                   <div className=\"description\">{item.description}</div>\n  //                   <div className=\"use-skills\">{item.skill.join(', ')}</div>\n  //                   {/* <a href={item.url}><i class=\"fa fa-link\"></i></a> */}\n  //                 </div>\n  //                 <div className=\"pfImg\"><img src={item.imgSrc} alt={item.title} className=\"shadow4\" /></div>\n  //               </li>\n                \n  //             )\n  //           })}\n  //         </ul>\n  //       </div>\n  //   )\n  // }\n\n  // seriousStudy = () => {\n  //   // const { b } = this.state;\n  //   return(\n  //   <h2 className=\"secTitle\">Serious study</h2>\n  //   )\n  // }\n\n  // contect = () => {\n  //   return(\n  //     <div>\n  //       <h2 className=\"secTitle\">Contect</h2>\n  //       <div className=\"myInfo\">\n  //       <dl>\n  //         <dt>Name</dt>\n  //         <dd>In hyo shim</dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Email</dt>\n  //         <dd><a href=\"mailto:hshehehe1128@gmail.com\">hshehehe1128@gmail.com</a></dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Addrass</dt>\n  //         <dd>Seoul</dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Career</dt>\n  //         <dd>6~7 year</dd>\n  //       </dl>\n  //       <dl>\n  //         <dt>Main / Sub</dt>\n  //         <dd>web design / web publisher</dd>\n  //       </dl>\n  //       </div>\n  //     </div>\n  //     )\n  // }\n  \n  \n    render(){\n      // const { contents, modalData, view } = this.state\n      // const filteredContents = contents\n      return(\n        <div className=\"work\">\n         <ul>\n           <li onClick={() => this.props.openModal('work')} >\n             <a className=\"work-sec1\">\n               <span>Work</span>\n             </a>\n           </li>\n           <li>\n             <a href=\"/img/resume.pdf\" download className=\"work-sec2\">\n               <span>Resume</span>\n             </a>\n           </li>\n           <li>\n             <a className=\"work-sec3\" href=\"mailto:hshehehe1128@gmail.com\">\n               <span>Contect</span>\n             </a>\n           </li>\n         </ul>\n\n         {/* <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          className=\"modal shadow4\"\n        >\n          {view}\n        <a onClick={this.closeModal} className=\"btn-close\"><i className=\"fa fa-times\"></i></a>\n        </Modal> */}\n\n        \n      </div>\n      )\n    }\n  }\n\n\n\nexport default Work;","import React, { Component } from \"react\";\n// import classNames from 'classnames';\nimport { ISlideConfig, PageSlides, SlideParallaxType } from \"react-page-slides\";\nimport Hindex from './components/Hindex';\nimport Work from './components/Work';\nimport Nav from './components/Nav';\nimport Modal from 'react-modal';\nimport PortfolioData from './data/portfolio.json';\n\nimport \"./css/default.scss\";\nimport \"./css/style.scss\";\n\n// test commit\nconst customStyles = {\n  content : {\n    top : '4vh',\n    left : '10vw',\n    right : 'auto',\n    bottom : 'auto',\n    transform: 'translate(2vw, 2vh)',\n    width:'80vw',\n    height:'92vh',\n    backgroundColor:'#fff',\n    overflowY: 'scroll'\n  }\n};\n\nvar aText = new Array(\n  \"be a designer\"\n  //,  \n  );\n  var iSpeed = 100; // time delay of print out\n  \n  var iArrLength = aText[0].length; // the length of the text array\n  var iScrollAt = 20; // start scrolling up at this many lines\n   \n  var iTextPos = 0; // initialise text position\n  var sContents = ''; // initialise contents variable\n  var iRow; // initialise current row\n\nclass Aboutme extends Component {\n\n  state = {\n    typedtext:''\n  }\n\n  clearText = () => {\n    this.setState({ typedtext: ''})\n  }\n    typewriter = () => {\n      \n      let iIndex = 0; // start printing array at this posision\n      sContents =  ' ';\n      iRow = Math.max(0, iIndex-iScrollAt);\n      \n      while ( iRow < iIndex ) {\n       sContents += aText[iRow++] + '<br />';\n      }\n      \n      const typedtext = sContents + aText[iIndex].substring(0, iTextPos) ;\n      // + \"_\"\n      this.setState({ typedtext });\n      if ( iTextPos++ == iArrLength ) {\n       iTextPos = 0;\n       iIndex++;\n       if ( iIndex != aText.length ) {\n        iArrLength = aText[iIndex].length;\n        setTimeout(() => this.typewriter(), 500);\n       }\n      } else {\n      //  setTimeout(\"typewriter()\", iSpeed);\n        setTimeout(() => this.typewriter(), iSpeed);\n      }\n    }\n\n\n  render() {\n    const{ typedtext } = this.state;\n    return (\n      <section className=\"aboutMe\">\n        <h2>\n          Who am <span>I</span>\n        </h2>\n        {/* <p>무엇을 해야 하는지는 본인이 잘 알고 있습니다. 해야 한다고 생각하는것을 하면 됩니다.<br/>\n언제나 배움의 자세를 멈추지 않고, 발전하는 디자이너가 되겠습니다. </p> */}\n        <p className=\"subTxt\">\n          I know what to do.\n          <br />You can do what you think you should do.\n          <br />I will always <span>{typedtext}</span> \n          <br />who does not stop learning and develops.\n        </p>\n        <ul className=\"about-content\">\n          <li><span>Adobe Photoshop</span></li>\n          <li>&lt;<span>HTML</span> /&gt;</li>\n          <li>&#123;<span>CSS</span>:<span>SASS</span>;&#125;</li>\n          <li><span>Java Script</span> &#40;React,Vue&#41;&#123;&#125;</li>\n          <li><span>Zeplin / Invision</span></li>\n        </ul>\n      </section>\n    );\n  }\n}\n\n\nclass App extends Component {\n  state = {\n    page: 0,\n    modalIsOpen: false,\n    modalData: null,\n    view: null,\n  }\n  modal = false;\n\n  componentDidMount(){\n    this._getList(); \n  }\n\n  _getList(){\n    this.setState({\n      contents : PortfolioData.contents\n    });\n  }\n \n  closeModal = () => {\n    this.setState({modalIsOpen: false});\n  }\n  \n  _updateModalData = (data) => {\n    this.setState({\n      modalData: data\n    })\n    this._modalOpen()\n  }\n\n  handleSlide = (index) => {\n    this.toggleActive('.rps-slide', index);\n    this.toggleActive('.nav li', index);\n    this.setState({\n      page: index\n    });\n\n    if (index === 1) {\n      this.child.clearText();\n      setTimeout(() => {\n        this.child.typewriter();\n      }, 700); \n    }                                                                    \n  }\n\n  toggleActive = (name, index) => {\n    const elements = document.querySelectorAll(name);\n    elements.forEach((el) => {\n      el.classList.remove('active');\n    });\n    elements[index].classList.add('active');\n\n   // const elements = document.querySelectorAll(name);\n    // elements.forEach((el, i) => {\n    //   if (index === i) {\n    //     el.classList.add('active');\n    //   } else {\n    //     el.classList.remove('active');\n    //   }\n    // });\n\n\n  }\n\n  componentDidMount() {\n    const { page } = this.state;\n    this.toggleActive('.rps-slide', page);\n    this.toggleActive('.nav li', page);\n  }\n\n\n  upDatePage = () => {\n    const currnetPage = this.props.page;\n   } \n \n   onClick = (order) =>{ \n    this.setState({\n      page: order\n    });\n   }\n\n  updateModal = newModal => {\n    this.modal = newModal;\n    console.log(this.modal);\n  }\n\n\n  openModal = name =>{\n    let view = null;\n    if (name === 'work') {\n      view = this.working();\n    }\n    //  else if (name === 'seriousStudy') {\n    //   view = this.seriousStudy();\n    // }\n    else if (name === 'contect') {\n      view = this.contect();\n    }\n\n    this.setState({ view, modalIsOpen: true });\n  }\n\n  working = () => {\n    const contents = PortfolioData.contents\n    return (\n      <div className=\"working\">\n        <h2 className=\"secTitle\">Work</h2>\n         <ul className=\"trigger\">  \n          {contents.map(item => {\n            return ( \n                <li key={\"w\"+item.id}><a href={\"#w\"+item.id}>{item.title}</a></li>\n            )\n          })}\n        </ul>   \n       <ul className=\"working-content\">\n        {contents.map(item => {\n          return (\n                <li key={\"w\"+item.id} className=\"clearfix\" id={\"w\"+item.id}>\n                  <div className=\"pfContent\">\n                    <div className=\"date\">{item.date}</div>\n                    <h3>{item.title}</h3>\n                    <div className=\"subTitle\">{item.sTitle}</div>\n                    <div className=\"description\">{item.description}</div>\n                    <div className=\"use-skills\">{item.skill.join(', ')}</div>\n                    {/* <a href={item.url}><i class=\"fa fa-link\"></i></a> */}\n                  </div>\n                  <div className=\"pfImg\"><img src={item.imgSrc} alt={item.title} className=\"shadow4\" /></div>\n                </li>\n                \n              )\n            })}\n          </ul>\n        </div>\n    )\n  }\n\n\n  render() {\n    const { view, modalIsOpen } = this.state;\n    const slides = [\n      {\n        content: <Hindex/>\n      },\n      {\n        content: <Aboutme ref={instance => { this.child = instance; }} />\n      },\n      {\n        content: <Work openModal={this.openModal}/>,\n        style: {\n          backgroundColor: \"#421161\",\n          color:\"#fff\"\n        }\n      }\n    ];\n    return (\n      <div id=\"root\" className=\"App\">\n        <Nav \n          page={this.state.page}\n          onClick={this.onClick}\n        />\n        <PageSlides\n          currentSlideIndex={this.state.page}\n          // currentSlideIndex={2}//작업후 삭제\n          onChange={this.handleSlide}\n          enableAutoScroll={!modalIsOpen}\n          transitionSpeed={1000}\n          slides={slides}\n          parallax={{\n            offset: 0.6,\n            type: SlideParallaxType.reveal\n          }}\n        />\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          className=\"modal shadow4\"\n        >\n          {view}\n        <a onClick={this.closeModal} className=\"btn-close\"><i className=\"fa fa-times\"></i></a>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\nimport React, { Component } from \"react\";\n\n\nclass Nav extends Component{ \n    trigger = (order) => {\n      this.props.onClick(order);\n    }\n  \n    render(){\n      return(\n        <ul className=\"nav\">\n          <li onClick={() => this.trigger(0)}><a href=\"#\"></a></li>\n          <li onClick={() => this.trigger(1)}><a href=\"#\"></a></li>\n          <li onClick={() => this.trigger(2)}><a href=\"#\"></a></li>\n        </ul>\n      );\n    }\n  }\n  \n\n\nexport default Nav;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}